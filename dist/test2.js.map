{"version":3,"sources":["test2.ts"],"names":[],"mappings":"AAAA,4CAA4C;;AAE5C,yBAAuB,YAAY,CAAC,CAAA;AACpC,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAGjC,IAAI,CAAC,GAAG,IAAI,mBAAQ,EAAE,CAAC;AAEvB,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AAElE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAE3C,IAAI,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACxC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,2HAA2H,CAAC,CAAC;AAEvK,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,2HAA2H,CAAC,CAAA","file":"test2.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport {SymSpell} from './SymSpell';\nimport * as fs from 'fs';\nimport * as assert from \"assert\";\n\n\nvar s = new SymSpell();\n\ns.createDictionary(fs.readFileSync('./small.txt').toString(), '');\n\nassert.deepEqual(s.correct('foo', ''), []);\n\nvar suggestions = s.correct('abou', '');\nassert.equal(JSON.stringify(suggestions), '[{\"term\":\"about\",\"distance\":1,\"count\":1},{\"term\":\"above\",\"distance\":2,\"count\":1},{\"term\":\"abort\",\"distance\":2,\"count\":1}]');\n\nassert.equal(JSON.stringify(s.correct('above', '')), '[{\"term\":\"above\",\"distance\":0,\"count\":1},{\"term\":\"about\",\"distance\":2,\"count\":1},{\"term\":\"abort\",\"distance\":2,\"count\":1}]')\n"]}